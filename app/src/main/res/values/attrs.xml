<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="WheelPicker">
        <attr name="wheel_data" format="reference" />
        <attr name="wheel_selected_item_position" format="integer" />
        <attr name="wheel_item_text_size" format="dimension" />
        <attr name="wheel_item_text_color" format="color" />
        <attr name="wheel_selected_item_text_color" format="color" />
        <attr name="wheel_same_width" format="boolean" />
        <attr name="wheel_maximum_width_text" format="string" />
        <attr name="wheel_maximum_width_text_position" format="integer" />
        <attr name="wheel_visible_item_count" format="integer" />
        <attr name="wheel_item_space" format="dimension" />
        <attr name="wheel_cyclic" format="boolean" />
        <attr name="wheel_indicator" format="boolean" />
        <attr name="wheel_indicator_color" format="color" />
        <attr name="wheel_indicator_size" format="dimension" />
        <attr name="wheel_curtain" format="boolean" />
        <attr name="wheel_curtain_color" format="color" />
        <attr name="wheel_atmospheric" format="boolean" />
        <attr name="wheel_curved" format="boolean" />
        <attr name="wheel_item_align" format="enum">
            <enum name="center" value="0" />
            <enum name="left" value="1" />
            <enum name="right" value="2" />
        </attr>
        <attr name="wheel_min_value" format="integer"/>
        <attr name="wheel_max_value" format="integer"/>
    </declare-styleable>

    <declare-styleable name="SingleDateAndTimePicker">
        <attr name="picker_textColor" format="color"/>
        <attr name="picker_selectedTextColor" format="color"/>
        <attr name="picker_textSize" format="dimension"/>
        <attr name="picker_curved" format="boolean"/>
        <attr name="picker_cyclic" format="boolean"/>
        <attr name="picker_canBeOnPast" format="boolean"/>
        <attr name="picker_visibleItemCount" format="integer" />
        <attr name="picker_min_value" format="integer" />
        <attr name="picker_max_value" format="integer" />
    </declare-styleable>

    <declare-styleable name="CustomCircleView">
        <attr name="circle_color" format="color"/>
    </declare-styleable>

    <declare-styleable name="RangeSeekBar">
        <!-- the minimum of the range -->
        <attr name="absoluteMinValue" format="integer|float"/>

        <!-- the maximum of the range -->
        <attr name="absoluteMaxValue" format="integer|float"/>

        <!-- show a single slider -->
        <attr name="singleThumb" format="boolean"/>

        <!-- show the labels on the right and left-->
        <attr name="showLabels" format="boolean"/>

        <!-- alwaysActive will make the buttons and bar always draw as the activeColor (the default is false) -->
        <attr name="alwaysActive" format="boolean"/>

        <!-- show the currently selected value above each thumb (defaults to true) -->
        <attr name="valuesAboveThumbs" format="boolean"/>

        <!-- padding on either side on the slider -->
        <attr name="internalPadding" format="dimension"/>

        <!-- the height of the bar -->
        <attr name="barHeight" format="dimension"/>

        <!-- the color of the bar that is not selected -->
        <attr name="defaultColor" format="color"/>

        <!-- the color of the bar that is selected -->
        <attr name="activeColor" format="color"/>

        <!-- the color of the text above thumbs -->
        <attr name="textAboveThumbsColor" format="color"/>

        <!-- 그라데이션 효과 -->
        <attr name="showGradient" format="boolean"/>

        <!-- 그라데이션 효과 카운트 -->
        <attr name="gradientCount" format="integer"/>

        <attr name="firstGradientColor" format="color"/>
        <attr name="secondGradientColor" format="color"/>
        <attr name="thirdGadientColor" format="color"/>
        <attr name="fourthGradientColor" format="color"/>
        <attr name="fifthGradientColor" format="color"/>
        <attr name="sixthGradientColor" format="color"/>

        <!-- set drawables for thumb handles -->
        <attr name="thumbNormal" format="reference"/>
        <attr name="thumbPressed" format="reference"/>
        <attr name="thumbDisabled" format="reference"/>

        <!-- thumb shadow specifications -->
        <attr name="thumbShadow" format="boolean"/>
        <attr name="thumbShadowColor" format="color"/>
        <attr name="thumbShadowXOffset" format="dimension"/>
        <attr name="thumbShadowYOffset" format="dimension"/>
        <attr name="thumbShadowBlur" format="dimension"/>

        <!-- to activate the thumbs and texts when the min and max values are the default ones (defaults to false) -->
        <attr name="activateOnDefaultValues" format="boolean"/>
        <attr name="minGap" format="integer"/>
        <attr name="leftThumbMax" format="integer"/>
        <attr name="rightThumbMin" format="integer"/>
    </declare-styleable>

    <!-- Custom Switch -->

    <attr name="enabled" format="boolean" />
    <attr name="forceAspectRatio" format="boolean" />

    <attr name="switchDesign" format="enum">
        <enum name="large" value="0" />
        <enum name="slim" value="1" />
        <enum name="android" value="2" />
    </attr>

    <declare-styleable name="customSwitch">
        <attr name="checked" format="boolean" />
        <attr name="enabled" />
        <attr name="forceAspectRatio" />

        <attr name="switchDesign" />

        <attr name="switchBkgCheckedColor" format="color" />
        <attr name="switchBkgNotCheckedColor" format="color" />

        <attr name="switchBkgCheckedImage" format="reference" />
        <attr name="switchBkgNotCheckedImage" format="reference" />

        <attr name="switchToggleCheckedColor" format="color" />
        <attr name="switchToggleNotCheckedColor" format="color" />

        <attr name="switchToggleCheckedImage" format="reference" />
        <attr name="switchToggleNotCheckedImage" format="reference" />


    </declare-styleable>



</resources>

